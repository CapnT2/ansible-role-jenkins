---

- name: add apt-key
  apt_key:
    url: "https://pkg.jenkins.io/debian/jenkins-ci.org.key"
    state: present
  become: yes

- name: add repository
  apt_repository:
    repo: "deb http://pkg.jenkins.io/debian-stable binary/"
    state: present
    update_cache: yes
  become: yes

- name: install jenkins
  apt:
    name: jenkins
    state: latest
  become: yes

# https://github.com/jenkinsci/packaging/pull/106
- name: "patch init.d #1"
  replace:
    path: /etc/init.d/jenkins
    regexp: "{{ jenkins_initd_patch_1 | regex_escape() }}"
    replace: "pkill -u \"${JENKINS_USER}\" -f 'jenkins.war' || return 3"
  register: jenkins_initd_patched_1
  become: yes

- name: "patch init.d #2"
  replace:
    path: /etc/init.d/jenkins
    regexp: "{{ jenkins_initd_patch_2 | regex_escape() }}"
    replace: "return `ps -U $JENKINS_USER --no-headers -f | egrep -e '(java)' | egrep -e '(jenkins\\.war)' | grep -v defunct | grep -c . `"
  register: jenkins_initd_patched_2
  become: yes

- name: "patch init.d #3"
  replace:
    path: /etc/init.d/jenkins
    regexp: "{{ jenkins_initd_patch_3 }}"
    replace: "for n in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; do\n            sleep 15"
  register: jenkins_initd_patched_3
  become: yes

- name: create /run/jenkins
  file:
    state: directory
    path: /run/jenkins/
    owner: jenkins
    group: root
    mode: 0755
  become: yes

- name: remove ulimit
  replace:
    path: /etc/default/jenkins
    regexp: ^MAXOPENFILES=.*$
  become: yes
  register: jenkins_ulimit_action
  when:
    - ansible_virtualization_type is defined
    - ansible_virtualization_type in jenkins_ulimit_blacklist

- name: install required tools & libs
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - python-lxml
  become: yes

- name: set JENKINS_ARGS
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_ARGS='
    line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT --httpListenAddress={{ jenkins_http_listen_address }}"'
  become: yes
  notify: restart_jenkins

- name: set JAVA_ARGS
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JAVA_ARGS='
    line: 'JAVA_ARGS="{{ jenkins_java_args | join(" ") }}"'
  become: yes
  notify: restart_jenkins

- name: systemd daemon-reload
  command: systemctl daemon-reload
  become: yes
  when:
    - jenkins_systemd_check is succeeded
    - jenkins_initd_patched_1 is changed or jenkins_initd_patched_2 is changed or jenkins_initd_patched_3 is changed

- name: restart jenkins
  service:
    name: jenkins
    state: restarted
  become: yes
  when: jenkins_ulimit_action is changed or jenkins_initd_patched_1 is changed or jenkins_initd_patched_2 is changed or jenkins_initd_patched_3 is changed

- name: waitfor jenkins 
  uri:
    url: "{{ jenkins_url }}"
    status_code: "200,403"
  register: waitfor_jenkins
  until: waitfor_jenkins is success
  retries: 300
  delay: 1
  changed_when: false

- name: create jenkins-cli folder
  file:
    state: directory
    path: /opt/jenkins-cli
    mode: 0755
  become: yes

- name: copy-over jenkins-cli
  copy:
    src: /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar
    dest: /opt/jenkins-cli/jenkins-cli.jar
    remote_src: yes
    mode: 0644
  become: yes

- name: create jenkins-cli shortcut
  template:
    src: jenkins-cli.sh
    dest: /usr/local/bin/jenkins-cli
    mode: 'a+x'
  become: yes
