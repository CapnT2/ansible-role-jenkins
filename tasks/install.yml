---

- name: add apt-key
  apt_key:
    url: "https://pkg.jenkins.io/debian/jenkins-ci.org.key"
    state: present
  become: yes

- name: add repository
  apt_repository:
    repo: "deb http://pkg.jenkins.io/debian-stable binary/"
    state: present
    update_cache: yes
  become: yes

- name: install jenkins
  apt:
    name: jenkins
    state: latest
  become: yes

- name: install required tools & libs
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - python-lxml
  become: yes

- name: set JENKINS_ARGS
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JENKINS_ARGS='
    line: 'JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT --httpListenAddress={{ jenkins_http_listen_address }}"'
  become: yes
  notify: restart_jenkins

- name: set JAVA_ARGS
  lineinfile:
    path: /etc/default/jenkins
    regexp: '^JAVA_ARGS='
    line: 'JAVA_ARGS="-Djava.awt.headless=true -Xms{{ jenkins_memory_max }} -Xmx{{ jenkins_memory_max }} -Djenkins.install.runSetupWizard=false"'
  become: yes
  notify: restart_jenkins

# this is unfortunately necessary as we need to rely on a running jenkins instance, this won't interfere though with already setup systems...
#- name: launch jenkins
#  service:
#    name: jenkins
#    state: started
#  become: yes

- name: waitfor jenkins
  wait_for:
    port: 8080

- name: create jenkins-cli folder
  file:
    state: directory
    path: /opt/jenkins-cli
    mode: 0755
  become: yes

- name: copy-over jenkins-cli
  copy:
    src: /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar
    dest: /opt/jenkins-cli/jenkins-cli.jar
    remote_src: yes
    mode: 0644
  become: yes

- name: create jenkins-cli shortcut
  template:
    src: jenkins-cli.sh
    dest: /usr/local/bin/jenkins-cli
    mode: 'a+x'
  become: yes

# cat /var/lib/jenkins/secrets/initialAdminPassword
# 


# 2) make admin user predictable


# 3) install plugins via jenkins-cli
